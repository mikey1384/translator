name: Release – Windows

on:
  workflow_dispatch:
  push:
    tags: ['v*']   # same trigger as macOS

jobs:
  win-build:
    runs-on: windows-2022
    timeout-minutes: 90

    steps:
      - uses: actions/checkout@v4

      # 1) Node & Python for node‑gyp
      - uses: actions/setup-node@v4
        with:
          node-version: 22          # same as dev
          cache: 'npm'

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 2) MSVC workload  (same one you installed locally)
      - name: Install MSVC
        run: choco install visualstudio2022buildtools `
               --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools `
               --includeRecommended --includeOptional --quiet --norestart"

      # 3) Install deps *and* compile webrtcvad for Electron
      - name: Install deps + rebuild natives
        run: |
          npm ci --no-audit --fund=false
          npx electron-builder install-app-deps --arch x64

      # 4) Build the app & NSIS installer
      - name: Package Windows x64
        run: npm run package:win

      # 5) Upload artefacts (to R2 and/or GitHub Release)
      - name: Upload to R2
        env:
          R2_BUCKET: ai-translator-downloads
          R2_ENDPOINT: https://${{ secrets.CF_ACCOUNT_ID }}.r2.cloudflarestorage.com
          AWS_ACCESS_KEY_ID: ${{ secrets.CF_R2_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CF_R2_SECRET }}
        shell: bash
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          TARGET="win/${VERSION:-latest}"
          aws s3 cp dist/ "s3://${R2_BUCKET}/${TARGET}/" \
            --recursive --exclude "*" --include "*.exe" --include "*.zip" \
            --include "*yml" --include "*.blockmap" \
            --endpoint-url "${R2_ENDPOINT}"

      - name: Publish GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/*.exe 